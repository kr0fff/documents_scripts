{
  "Descriptors": {
    "IsGeneralLayout": true,
    "Currency": "EUR",
    "DocumentSubtypeId": "2"
  },
  "Alias": "general_receipt_9_lit_lt",
  "Tags": {
    "KeyWords": [
      ""
    ]
  },
  "MatchCondition": {
    "type": "extractsAll",
    "value": []
  },
  "Constraints": {
    "Any": [],
    "AnyX": [],
    "Prefix": [
      "Viso isk . PVM ( EUR ) {InvoiceTotal:decimal:}",
      "Viso be PVM ( EUR ) {InvoiceSubtotal:decimal:}"
    ],
    "vPrefix": [],
    "InLine": [
      "Įmonės pavadinimas {SupplierName:string:4} Įmonės pavadinimas {CustomerName:string:4}",
      "PVM {Tariff9:regex:9} % ( EUR ) {Tax9:decimal:}",
      "PVM {Tariff21:regex:21} % ( EUR ) {Tax21:decimal:}",
      "Įmonės kodas {SupplierCode:regex:\\d{7,}} Įmonės kodas {CustomerCode:regex:\\d{7,}}",
      "PVM ID {SupplierTaxId:regex:[A-Z]{2}\\d+} PVM ID {CustomerTaxId:regex:[A-Z]{2}\\d+}",
      "PVM sąsk . faktūros {_Anchor1:literal:data} {InvoiceDate:date:dd.mm.yyyy}"
    ],
    "SubLine": [],
    "EntireLine": [
      "PIRKINIAI LAIKOTARPIU {_Anchor0:date:dd.mm.yyyy} {:date:dd.mm.yyyy}",
      "PVM sąskaita {_Anchor2:literal:faktūra}",
      "{Page:regex:\\d+\\/\\d+}",
      "PVM sąsk faktūros numeris {InvoiceNumber:string:3}"
    ],
    "UpDown": []
  },
  "Hints": [
    "ContinuousPages"
  ],
  "TextTables": [
    {
      "Name": "LineItems",
      "Header": [
        "PIRKINIO ID",
        "DATA",
        "SUMA",
        " ",
        "SUMA BE PVM",
        "PVM %",
        "PVM",
        "TARPINĖ SUMA"
      ],
      "Cells": [
        "{LineNo:text:}",
        "{Date:date:}",
        "{Subtotal:decimal:}",
        "{Description:text:}",
        "{UnitPriceExTax:decimal:}",
        "{TaxPercent:decimal:}",
        "{Tax:decimal:}",
        "{Total:decimal:}"
      ]
    }
  ],
  "Info": {
    "InstanceId": "193"
  },
  "Script": "function ManualMatch(fields, tables) return (fields._Anchor0 and fields._Anchor1 and fields._Anchor2 and 100) or 0 end function Finalize(fields, tables, ctx) if fields.InvoiceNumber then fields.InvoiceNumber = fields.InvoiceNumber.Text:gsub('%s+', '') end if tables.LineItems then local items = tables.LineItems local merged = ctx:CreateTable() merged:AppendColumn('Subtotal') merged:AppendColumn('Tax') merged:AppendColumn('Total') merged:AppendColumn('TaxPercent') tables['MergedVatLineItems'] = merged local totalRate9 = { subtotal = ctx:CreateDecimal('0.00'), tax = ctx:CreateDecimal('0.00'), total = ctx:CreateDecimal('0.00') } local totalRate21 = { subtotal = ctx:CreateDecimal('0.00'), tax = ctx:CreateDecimal('0.00'), total = ctx:CreateDecimal('0.00') } local totalRate0 = { subtotal = ctx:CreateDecimal('0.00'), total = ctx:CreateDecimal('0.00') } local tax9 = fields.Tax9 or nil local tariff9 = fields.Tariff9 or nil local tax21 = fields.Tax21 or nil local tariff21 = fields.Tariff21 or nil for i = 0, items.Length - 1 do if tax9 and tariff9 and items[i].TaxPercent.Value and fields.Tariff9.Text == items[i].TaxPercent.Text then totalRate9.subtotal = items[i].UnitPriceExTax.Value and totalRate9.subtotal + items[i].UnitPriceExTax.Value or totalRate9.subtotal totalRate9.tax = items[i].Tax.Value and totalRate9.tax + items[i].Tax.Value or totalRate9.tax totalRate9.total = items[i].Total.Value and totalRate9.total + items[i].Total.Value or totalRate9.total end if tax21 and tariff21 and items[i].TaxPercent.Value and fields.Tariff21.Text == items[i].TaxPercent.Text then totalRate21.subtotal = items[i].UnitPriceExTax.Value and totalRate21.subtotal + items[i].UnitPriceExTax.Value or totalRate21.subtotal totalRate21.tax = items[i].Tax.Value and totalRate21.tax + items[i].Tax.Value or totalRate21.tax totalRate21.total = items[i].Total.Value and totalRate21.total + items[i].Total.Value or totalRate21.total end if items[i].TaxPercent.Value and items[i].TaxPercent.Text == '0' then totalRate0.subtotal = items[i].UnitPriceExTax.Value and totalRate0.subtotal + items[i].UnitPriceExTax.Value or totalRate0.subtotal totalRate0.total = items[i].Total.Value and totalRate0.total + items[i].Total.Value or totalRate0.total end end if tax9 and totalRate9.subtotal > 0 and totalRate9.tax > 0 and totalRate9.total > 0 then merged:AppendRow() merged[-1].Subtotal = totalRate9.subtotal merged[-1].Tax = totalRate9.tax merged[-1].Total = totalRate9.total merged[-1].TaxPercent = fields.Tariff9 fields.Tariff9 = nil fields.Tax9 = nil end if tax21 and totalRate21.subtotal > 0 and totalRate21.tax > 0 and totalRate21.total > 0 then merged:AppendRow() merged[-1].Subtotal = totalRate21.subtotal merged[-1].Tax = totalRate21.tax merged[-1].Total = totalRate21.total merged[-1].TaxPercent = fields.Tariff21 fields.VatTariff = fields.Tariff21 fields.Tariff21 = nil fields.Tax21 = nil end if totalRate0.subtotal > 0 and totalRate0.total > 0 then merged:AppendRow() merged[-1].Subtotal = totalRate0.subtotal merged[-1].Tax = ctx:CreateDecimal('0.00') merged[-1].Total = totalRate0.total merged[-1].TaxPercent = ctx:CreateDecimal('0.00') end end end"
}